---
- name: 创建临时目录/tmp/harbor
  file:
    path: /tmp/harbor
    state: directory
    mode: '0755'

- name: 传输Harbor部署包到目标服务器
  copy:
    src: /opt/files/harbor-offline-installer-v2.12.1.tgz
    dest: /tmp/harbor/harbor-offline-installer-v2.12.1.tgz
    mode: '0644'
  register: harbor_copy

- name: 验证Harbor部署包传输成功
  fail:
    msg: "Harbor部署包传输失败，请检查源文件路径是否正确"
  when: harbor_copy.failed

- name: 创建Harbor安装目录
  file:
    path: "{{ harbor_home }}"
    state: directory
    mode: '0755'

- name: 解压Harbor部署包
  unarchive:
    src: /tmp/harbor/harbor-offline-installer-v2.12.1.tgz
    dest: "{{ harbor_home }}"
    extra_opts: [--strip-components=1]

- name: 配置Harbor
  template:
    src: harbor.yml.j2
    dest: "{{ harbor_home }}/harbor.yml"

- name: 安装Harbor
  shell: |
    cd "{{ harbor_home }}"
    ./install.sh
  args:
    chdir: "{{ harbor_home }}"

- name: 检查Harbor服务状态
  shell: docker ps | grep harbor
  register: harbor_status
  changed_when: false

- name: 显示Harbor服务状态
  debug:
    msg: "{{ harbor_status.stdout }}"

- name: Copy json file
  copy:
    src: "{{ item.file }}"
    dest: "/tmp/{{ item.file }}"
  with_items:
    - file: createk8s.json
    - file: createprometheus.json
    - file: creategjdd.json

- name: Pause 10
  pause:
    seconds: 10

- name: Create program
  shell:
    cmd: |
      curl -u "admin:{{ harbor_admin_password }}" -X POST -H "Content-Type: application/json" "http://{{ harbor_host }}:{{ harbor_port }}/api/v2.0/projects" -d @"{{ item.file }}"
    warn: no
    chdir: /tmp/
  with_items:
    - file: createk8s.json
    - file: createprometheus.json
    - file: creategjdd.json
    - file: createrancher.json
